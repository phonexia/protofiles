// Copyright 2025 Phonexia s.r.o.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Phonexia Audio Denoiser gRPC API.
syntax = "proto3";

package phonexia.grpc.technologies.denoiser.v1;

import "phonexia/grpc/common/core.proto";
import "google/protobuf/duration.proto";

// Service implementing audio denoiser.
service Denoiser {
    // Performs denoising on the given audio.
    rpc Denoise(stream DenoiseRequest) returns (stream DenoiseResponse);
}

// The top-level message sent by the client for the <code>Denoise</code> method.
message DenoiseRequest {
    // Audio data to denoise. There is no minimum audio length limit.
    phonexia.grpc.common.Audio audio = 1;
}

// The top-level message returned to the client by the <code>Denoise</code> method.
message DenoiseResponse {
    // Result containing the denoised audio.
    DenoiseResult result = 1;

    // Total length of the processed audio.
    google.protobuf.Duration processed_audio_length = 2;
}

// Message containing the result of audio denoising.
message DenoiseResult{
    // Denoised audio. Sample rate is the same as the input audio sample rate.
    // If the input was an audio with header, the result will also be audio
    // with header. If the input was sent in raw format, the result will also
    // be in a header-less raw format.
    phonexia.grpc.common.Audio audio = 1;
}