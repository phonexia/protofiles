// Copyright 2024 Phonexia s.r.o.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Health check definitions for gRPC API.
syntax = "proto3";

package grpc.health.v1;

// Request message for checking the health of a service.
message HealthCheckRequest {
  // The name of the service to check.
  string service = 1;
}

// Response message for checking the health of a service.
message HealthCheckResponse {
  // The serving status of the checked service.
  enum ServingStatus {
    UNKNOWN = 0;     // The serving status is unknown.
    SERVING = 1;     // The service is serving requests.
    NOT_SERVING = 2; // The service is not serving requests.
  }
  // The serving status of the checked service.
  ServingStatus status = 1;
}

// Service for checking the health of a service.
service Health {
  // Check the health of a service.
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);

  // Watch the health of a service. Messages about service availability will be
  // periodically sent on the stream.
  rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
}
