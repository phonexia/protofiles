// Copyright 2025 Phonexia s.r.o.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Phonexia licensing definitions for gRPC API.
syntax = "proto3";

package phonexia.grpc.common;

// Service that implements licensing provider.
service Licensing {
  // Returns information about the license.
  rpc Info (LicensingInfoRequest) returns (LicensingInfoResult);
}

message LicensingInfoRequest {}

// The top-level message returned to the client by <code>LicenseInfo</code>
// method.
message LicensingInfoResult {
  // Validity of a license in YYYY-MM-DD format according to ISO 8601.
  string valid_until = 1;
  // License status, contains "false" if the license has expired.
  bool is_valid = 2;
  // Name of the technology being licensed.
  string technology_name = 3;
  // Information about the licensed model.
  ModelInfo model_info = 4;
  // License flags
  map<string, string> license_flags = 5;
}

message ModelInfo {
  // Name of the model.
  string name = 1;
  // Version of the model.
  string version = 2;
}